

     ▄▄▄· ▄▄▄· .▄▄ · ▄▄▄▄▄▄▄▄ .▄▄▄▄· ▪    ▐ ▄        ▪  ▄▄▄         ▐ ▄
    ▐█ ▄█▐█ ▀█ ▐█ ▀. •██  ▀▄.▀·▐█ ▀█▪██  •█▌▐█       ██ ▀▄ █·▪     •█▌▐█
     ██▀·▄█▀▀█ ▄▀▀▀█▄ ▐█.▪▐▀▀▪▄▐█▀▀█▄▐█· ▐█▐▐▌       ▐█·▐▀▀▄  ▄█▀▄ ▐█▐▐▌
    ▐█▪·•▐█ ▪▐▌▐█▄▪▐█ ▐█▌·▐█▄▄▌██▄▪▐█▐█▌ ██▐█▌       ▐█▌▐█•█▌▐█▌.▐▌██▐█▌
    .▀    ▀  ▀  ▀▀▀▀  ▀▀▀  ▀▀▀ ·▀▀▀▀ ▀▀▀ ▀▀ █▪       ▀▀▀.▀  ▀ ▀█▄▀▪▀▀ █▪


 This application is a PasteBin clone written in Rust using the Iron framework.
 It is designed primarily to be used via the `curl` command, although it works
 from a browser too. Accepted requests are:

 POST /
     Accepts raw data in the body of the request and responds with the View and
     Edit URLs of the resulting paste. The Edit URL simply includes the edit key
     as part of the URL (see DELETE and PUT below). Yields a 403 Bad Request
     response if the paste is not valid UTF-8.

     $ echo "hello world" | curl --data-binary @- http://{{socket}}
     View URL: http://{{socket}}/{{id}}
     Edit URL: http://{{socket}}/{{id}}/{{key}}


 GET /<id>/<?ext>
     Retrieves the content for the paste associated with <id>. If the optional
     parameter <ext> is supplied, syntax highlighting associated with the file
     extension <ext> is applied to the result (either via terminal escapes if
     your UserAgent begins with "curl/", or HTML othersise). Yields a 404 Not
     Found response if <id> does not exist, and a 403 Bad Request response if an
     unknown file extension is requested.

     $ curl http://{{socket}}/{{id}}
     hello world
     $ curl http://{{socket}}/{{id}}/{{ext}}
     hello world [with Rust syntax highlighting]


 DELETE /<id>/<key>
     Deletes the paste associated with <id>, provided that <key> is valid.
     Yields a 403 Bad Request response if the paste does not exist, or if the
     key is invalid.

     $ curl -X DELETE http://{{socket}}/{{id}}/{{key}}
     Paste Deleted.


 PUT /<id>/<key>
     Replaces the contents of the paste associated with <id>, provided that
     <key> is valid. Yields a 403 Bad Request response if the paste does not
     exist, or if the key is invalid

     $ echo "other world" | curl -X PUT --data-binary @- \
     > http://{{socket}}/{{id}}/{{key}}
     http://{{socket}}/{{id}} overwritten.

________________________________________________________________________________


 You may find this bash function useful. Put it in your .bashrc and then run it
 via `paste file.txt` or `cat file.txt | paste`

 function paste() {
     local file=${1:-/dev/stdin}
     curl --data-binary @${file} http://{{socket}}
 }

 Alternatively, if you'd like to submit a paste from your browser, visit
 http://{{socket}}/webupload
